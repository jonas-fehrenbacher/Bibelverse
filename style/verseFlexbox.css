:root {
    --verseFlexbox-hard-lightFG: rgb(80, 80, 80);
    --verseFlexbox-hard-lightBG: rgb(222, 222, 222);
    --verseFlexbox-hard-darkFG: rgb(255, 255, 255);
    --verseFlexbox-hard-darkBG: rgb(140,140,140);
    --verseFlexbox-soft-lightFG: rgb(80, 80, 80);
    --verseFlexbox-soft-lightBG: rgb(235, 235, 235);
    --verseFlexbox-soft-darkFG: rgb(80, 80, 80);
    --verseFlexbox-soft-darkBG: rgb(222, 222, 222);
}

#verseFlexbox {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: stretch;
    align-content: center; /*multi-line*/
    row-gap: 0.5rem;
    column-gap: 0.5rem;

    padding: 0.5rem;
    
    background-color: rgb(245, 245, 245);
}

.verseFlexbox-item {
    /*flex-basis: min-content;*/ /* 20rem; sets the initial main size; min-content is grid style and max-content/fit-content is list style. */
    flex-grow: 1; /* fill remaining horizontal space */
    min-width: 0; /* 20rem; Tiles can get too small otherwise; If the value is too big, then mobile view is buggy. */

    display: flex;
    justify-content: space-between; /* or: center */
    align-content: stretch;
    flex-direction: column;

    padding: 0.5rem;
    border-radius: 0.5rem;
    box-shadow: 2px 2px 50px 1px rgb(194, 194, 194) inset; /* x, y, blur-radius, spread-radius; inset: inside the box; see: https://www.w3schools.com/cssref/playdemo.php?filename=playcss_box-shadow */
    box-shadow: 1px 1px 5px;
    
    text-align: center;
    background-color: var(--verseFlexbox-soft-lightBG);
    color: var(--verseFlexbox-soft-lightFG);
}

.verseFlexbox-item-gridView {
    flex-basis: min-content; /* 20rem; sets the initial main size; min-content causes grid style. */
}

.verseFlexbox-item-listView {
    flex-basis: 999rem; /* 999rem; sets the initial main size; max-content/fit-content causes full item width, but when content is too small, then item does not fill whole row. */
}

.verseFlexbox-item-medium {
    min-width: 50%;
}

.verseFlexbox-item-big {
    min-width: 100%;
}

.verseFlexbox-item:nth-child(even) {
    background: var(--verseFlexbox-soft-darkBG);
    color: var(--verseFlexbox-soft-darkFG);
}